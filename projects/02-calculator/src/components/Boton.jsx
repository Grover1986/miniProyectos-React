import '../css/Boton.css'

function Boton(props) {

    const isOperator = (value) => {
        // si estos tres valores se cumplen entonces ser치 Verdadero, y si cualquiera de estos es False entonces ser치 False
        return isNaN(value) && (value != '.') && (value != '=')
    } 

    return (
        /*
        * A este div le agregamos dos atributos importantes, la clase y lo q har치 el bot칩n cuando se haga clic  
        * Creamos una clase m치s elaborada para decidir cual ser치 la clase del Boton ya q en la calculadora necesitaremos disintos estilos para los distintos valores del Bot칩n
        * Si el Bot칩n tiene un Operador el fondo ser치 verde y si es un n칰mero el color ser치 distinto
        */
        /* llamamos a una funcion dentro de className para saber si children es un operador (+,-,*,/), s칤 es un operador agregamos clase 'operator' sino ninguna clase */
        <div 
            className={`btn ${isOperator(props.children) ? 'operator' : ''}`.trim()}
            // Como estamos 游녢 llamando a una funci칩n 'props.handleClick', 칠ste se va a reemplazar x el valor retornado de dicha funcion y eso nos dar치 error xq el event listener
            // no debe retornar s칩lo un valor es decir no debe recibir una llamada sino q debe ser una funci칩n llamando a otra funci칩n es como una acci칩n q esta esperando q ocurra 
            // el evento; entonces para q el div llame a la funcion correctamente, tenemos q escribir una funcion an칩nima y 칠ste ahora si retornara correctamente y no s칩lo un valor
            onClick={() => props.handleClick(props.children)}>  {/* Cuando usamos este props.handleClick estamos accediendo a su valor es decir a addInput y esa funcion necesita 
            un valor y ese valor es props.children */}
            {props.children}
        </div>
    )
}

export default Boton